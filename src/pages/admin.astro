---
import { supabase } from "../lib/supabase";
import "../styles/global.css";
// import { onMount } from "astro/jsx-runtime";

// let passcode = "";
// let pendingEdits = [];

/*const fetchEdits = async () => {
	const { data, error } = await supabase
		.from("printer_edits")
		.select("*")
		.eq("approved", false);
	if (!error) pendingEdits = data;
};

onMount(fetchEdits);

const handleApproval = async (edit_id, approve) => {
	const response = await fetch(
		`${import.meta.env.PUBLIC_SUPABASE_URL}/functions/v1/approve_edit`,
		{
			method: "POST",
			headers: { "Content-Type": "application/json" },
			body: JSON.stringify({ edit_id, approve, passcode }),
		}
	);
	if (response.ok) {
		alert("Processed!");
		await fetchEdits();
	} else {
		alert("Error: " + (await response.text()));
	}
};*/
---

{
	/*<html>
	<head>
		<title>Admin Dashboard</title>
	</head>
	<body>
		<h1>üõ†Ô∏è Printer Moderation</h1>

		<label>Admin passcode:</label>
		<input
			type="password"
			value={passcode}
			on:input={(e) => (passcode = e.target.value)}
		/>

		<button on:click={fetchEdits}>Load Pending Edits</button>

		<div id="edits">
			{
				pendingEdits.length === 0 ? (
					<p>No pending edits.</p>
				) : (
					<ul>
						{pendingEdits.map((edit) => (
							<li>
								<h3>{edit.printer_id ? "Edit Printer" : "New Printer"}</h3>
								<pre>{JSON.stringify(edit.proposed_changes, null, 2)}</pre>
								<button on:click={() => handleApproval(edit.id, true)}>
									‚úÖ Approve
								</button>
								<button on:click={() => handleApproval(edit.id, false)}>
									‚ùå Reject
								</button>
							</li>
						))}
					</ul>
				)
			}
		</div>
	</body>
</html>

<style>
	body {
		font-family: sans-serif;
		padding: 1rem;
	}
	pre {
		background: #eee;
		padding: 0.5rem;
		border-radius: 6px;
	}
	button {
		margin: 0.2rem;
	}
</style>*/
}
